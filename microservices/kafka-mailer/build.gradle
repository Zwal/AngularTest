/*
 * Copyright (C) 2017 Juergen Zimmermann, Hochschule Karlsruhe
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

// Aufruf: 
// .\gradlew --build-cache [run]

buildscript {
    ext {
        kotlin_version = '1.2.0-rc-39'
        ktlintVersion = '0.12.1'
    }

    repositories {
        maven { url 'http://dl.bintray.com/kotlin/kotlin-eap-1.2' }
        maven { url 'https://plugins.gradle.org/m2' }
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
    configurations.classpath {
        resolutionStrategy { force "com.github.shyiko:ktlint:$ktlintVersion" }
    }
}

plugins {
    id 'application'
    // ggf. https://github.com/johnrengelman/shadow

    id 'org.jmailen.kotlinter' version '1.4.0'
    id 'io.gitlab.arturbosch.detekt' version '1.0.0.RC5-3'

    id 'idea'
}

apply plugin: 'kotlin'

defaultTasks 'run'

ext {
    reactorKafkaVersion = '1.0.0.RELEASE'
    jacksonVersion = '2.9.2'
    springVersion = '5.0.1.RELEASE'
    javaxMailVersion = '1.6.0'
    log4jVersion = '2.9.1'
    intellijVersion = '2017.3'
}

repositories {
    maven { url 'http://dl.bintray.com/kotlin/kotlin-eap-1.2' }
    maven { url 'http://repo.spring.io/libs-milestone' }
    jcenter()
}

dependencies {
    implementation("org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion",
                   "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version",
                   "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version",
                   "io.projectreactor.kafka:reactor-kafka:$reactorKafkaVersion",
                   "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion",
                   "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion",
                   "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonVersion",
                   "org.springframework:spring-context-support:$springVersion",
                   "com.sun.mail:javax.mail:$javaxMailVersion")
}

// https://kotlinlang.org/docs/reference/using-gradle.html
compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        verbose = true
        freeCompilerArgs = ['-Xjsr305=strict']
        //allWarningsAsErrors = true
    }
}

sourceSets { main.kotlin.srcDirs += 'src/main/kotlin' }

mainClassName = 'de.hska.kafkamailer.KafkaMailerKt'
jar {
    archivesBaseName = 'kafkamailer'
    manifest {
        attributes 'Specification-Vendor': 'Provided by Juergen Zimmermann'
        attributes 'Specification-Version': 'v1.0'
    }
}

detekt {
    // version = "$detektVersion"
    profile('main') {
        input = "$projectDir/src/main/kotlin"
        config = "$projectDir/config/detekt.yml"
        output = "$buildDir/reports/detekt"
        // filters = '.*/config/.*'
    }
    idea {
        path = "${System.getenv('USERPROFILE')}/.IntelliJIdea$intellijVersion"
        //codeStyleScheme = "$projectDir/config/code-style.xml"
        inspectionsProfile = "$projectDir/.idea/inspectionProfiles/Project_Default.xml"
        report = "$buildDir/reports"
    }
}

// Aufruf:   gradlew cleanIdea idea
// https://docs.gradle.org/current/dsl/org.gradle.plugins.ide.idea.model.IdeaModule.html
idea {
    module {
        // downloadSources = true
        downloadJavadoc = true
    }
}
